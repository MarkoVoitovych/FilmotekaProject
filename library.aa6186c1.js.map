{"mappings":"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","sources":["src/javascript/library.js","src/javascript/libRefs.js","src/javascript/libraryFooterModalOpen.js"],"sourcesContent":["import BigPicture from 'bigpicture';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { libRefs } from './libRefs';\nimport { renderMarkup } from './renderMarkup';\nimport { ThemoviedbAPI } from './themoviedbAPI';\nimport { createModalMarkUp } from './renderModalMarkUp';\nimport { spinnerPlay, spinnerStop } from './spiner';\nimport { get, removeLocal } from './localStorageUse';\nimport { libraryFooterModalOpen } from './libraryFooterModalOpen';\n\nconst themoviedbAPI = new ThemoviedbAPI();\n\ntry {\n    spinnerPlay();\n    renderWatchedMovies();\n    libRefs.footerLink.addEventListener(\"click\", libraryFooterModalOpen);\n} catch (error) {\n    console.log(error);\n} finally {\n    spinnerStop();\n}\n\nlibRefs.watchBtn.addEventListener('click', renderWatchedMovies);\nlibRefs.queueBtn.addEventListener('click', renderQueueMovies);\nlibRefs.library.addEventListener('click', onMovieCardClick);\n\nasync function renderWatchedMovies() {\n    libRefs.library.innerHTML = '';\n    const watchedMovies = get(themoviedbAPI.WATCH_KEY);\n    const watchedMoviesIds = watchedMovies.map(movie => movie.id);\n    watchedMoviesIds.forEach(async id => {\n        const movie = await themoviedbAPI.fetchMovieById(id);\n        const genre = movie.genres.map(genre => genre.name);\n        if (genre.length > 2) {\n            genre.splice(2, genre.length - 1, 'Other');\n        }\n        if (genre.length === 0) {\n            genre.push('Other');\n        }\n        libRefs.library.insertAdjacentHTML('beforeend', renderMarkup(movie, genre.join(', ')));\n        libRefs.library.lastElementChild.setAttribute('data-status', 'watched');\n    });\n}\n\nasync function renderQueueMovies() {\n    libRefs.library.innerHTML = '';\n    const queueMovies = get(themoviedbAPI.QUEUE_KEY);\n    const queueMoviesIDes = queueMovies.map(movie => movie.id);\n    queueMoviesIDes.forEach(async id => {\n        const movie = await themoviedbAPI.fetchMovieById(id);\n        const genre = movie.genres.map(genre => genre.name);\n        if (genre.length > 2) {\n            genre.splice(2, genre.length - 1, 'Other');\n        }\n        if (genre.length === 0) {\n            genre.push('Other');\n        }\n        libRefs.library.insertAdjacentHTML('beforeend', renderMarkup(movie, genre.join(', ')));\n        libRefs.library.lastElementChild.setAttribute('data-status', 'queue');\n    });\n}\n\nasync function onMovieCardClick(event) {\n    const movieCard = event.target.closest('.gallery__item');\n    try {\n        spinnerPlay();\n        const movieId = movieCard.dataset.id;\n        const movieStatus = movieCard.dataset.status;\n        console.log(movieStatus);\n        await themoviedbAPI.fetchMovieById(movieId).then(data => {\n            const posterPath = data.poster_path\n                ? `https://image.tmdb.org/t/p/w300${data.poster_path}`\n                : `https://astoriamuseums.org/wp-content/uploads/2020/10/OFM-poster-not-available.png`;\n            const releaseYear = new Date(Date.parse(data.release_date)).getFullYear();\n            const filmData = {\n                id: data.id,\n                poster: posterPath,\n                title: data.title,\n                originalTitle: data.original_title,\n                genres: [],\n                popularity: data.popularity,\n                overview: data.overview,\n                vote_average: data.vote_average,\n                vote_count: data.vote_count,\n                release_date: releaseYear,\n            };\n\n            data.genres.forEach(genre => {\n                filmData.genres.push(genre.name);\n            });\n            filmData.genres = filmData.genres.join(', ');\n\n            createModalMarkUp(filmData);\n\n        });\n\n        const removeFromWatchedBtn = document.querySelector(\n            '.lightbox-modal__watched-button'\n        );\n        removeFromWatchedBtn.textContent = \"Remove from Watched\";\n\n        const removeFromQuequeBtn = document.querySelector(\n            '.lightbox-modal__queque-button'\n        );\n        removeFromQuequeBtn.textContent = \"Remove from Queque\";\n\n        removeFromWatchedBtn.addEventListener('click', (e) => {\n            const movieId = e.target.closest('.lightbox-modal').dataset.id;\n            removeLocal(themoviedbAPI.WATCH_KEY, movieId);\n            if (movieStatus === 'watched') {\n                movieCard.remove();\n            }\n        });\n        removeFromQuequeBtn.addEventListener('click', (e) => {\n            const movieId = e.target.closest('.lightbox-modal').dataset.id;\n            removeLocal(themoviedbAPI.QUEUE_KEY, movieId);\n            if (movieStatus === 'queue') {\n                movieCard.remove();\n            }\n\n        }\n        );\n    } catch (error) {\n        console.log(error);\n    } finally {\n        spinnerStop();\n    }\n}","export const libRefs = {\n    library: document.querySelector('.gallery--library'),\n    footerLink: document.querySelector('.footer__link'),\n    footerBackDrop: document.querySelector('.footer__backdrop'),\n    footerCloseBtn: document.querySelector('[data-modal-close]'),\n    watchBtn: document.querySelector('.button-watched'),\n    queueBtn: document.querySelector('.button-queue'),\n}\n\n","import { libRefs } from './libRefs';\n\nexport function libraryFooterModalOpen() {\n    libRefs.footerBackDrop.classList.remove('is-hidden');\n    document.querySelector(\"body\").classList.add('noScroll');\n    document.addEventListener('keydown', hideFooterModal);\n    libRefs.footerBackDrop.addEventListener(\"click\", hideFooterModal);\n    libRefs.footerCloseBtn.addEventListener(\"click\", footerCloseBtnOnClick)\n}\n\nfunction footerCloseBtnOnClick() {\n    libRefs.footerBackDrop.classList.add('is-hidden');\n    removeListeners();\n}\n\nfunction hideFooterModal(e) {\n    if (e.key === 'Escape' || e.target === libRefs.footerBackDrop) {\n        libRefs.footerBackDrop.classList.add('is-hidden');\n        removeListeners();\n    }\n}\n\nfunction removeListeners() {\n    document.removeEventListener('keydown', hideFooterModal);\n    libRefs.footerBackDrop.removeEventListener(\"click\", hideFooterModal);\n    libRefs.footerCloseBtn.removeEventListener(\"click\", footerCloseBtnOnClick);\n    document.querySelector(\"body\").classList.remove('noScroll');\n}"],"names":["$bpxeT","parcelRequire","$4f1ca7faaad88fce$export$a53e322463ec8607","library","document","querySelector","footerLink","footerBackDrop","footerCloseBtn","watchBtn","queueBtn","$4044ea41c59a9632$var$footerCloseBtnOnClick","classList","add","$4044ea41c59a9632$var$removeListeners","$4044ea41c59a9632$var$hideFooterModal","e","key","target","removeEventListener","remove","$05dc186ade895b4b$var$themoviedbAPI","$X3bd8","ThemoviedbAPI","$ddUeE","spinnerPlay","$05dc186ade895b4b$var$renderWatchedMovies","addEventListener","error","console","log","spinnerStop","$05dc186ade895b4b$var$_renderWatchedMovies","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee1","watchedMovies","innerHTML","$2ZtFH","get","WATCH_KEY","map","movie","id","forEach","_callee","genre1","fetchMovieById","_ctx","sent","genres","genre","name","length","splice","push","insertAdjacentHTML","$3Dz6Y","renderMarkup","join","lastElementChild","setAttribute","$05dc186ade895b4b$var$_renderQueueMovies","_callee2","queueMovies","QUEUE_KEY","genre2","$05dc186ade895b4b$var$_onMovieCardClick","event","movieCard","movieId1","movieStatus","removeFromWatchedBtn","removeFromQuequeBtn","closest","dataset","status","then","data","posterPath","poster_path","concat","releaseYear","Date","parse","release_date","getFullYear","filmData","poster","title","originalTitle","original_title","popularity","overview","vote_average","vote_count","$d1Qha","createModalMarkUp","textContent","movieId","removeLocal","t0"],"version":3,"file":"library.aa6186c1.js.map"}