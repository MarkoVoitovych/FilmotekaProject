{"mappings":"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","sources":["src/javascript/library.js","src/javascript/libRefs.js","src/javascript/renderLibraryMarkUp.js","src/javascript/libraryFooterModalOpen.js"],"sourcesContent":["import BigPicture from 'bigpicture';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { libRefs } from './libRefs';\nimport { renderLibraryMarkup } from './renderLibraryMarkUp';\nimport { ThemoviedbAPI } from './themoviedbAPI';\nimport { createModalMarkUp } from './renderModalMarkUp';\nimport { spinnerPlay, spinnerStop } from './spiner';\nimport { get, removeLocal } from './localStorageUse';\nimport { libraryFooterModalOpen } from './libraryFooterModalOpen';\n\nconst themoviedbAPI = new ThemoviedbAPI();\n\ntry {\n  spinnerPlay();\n  renderWatchedMovies();\n  libRefs.footerLink.addEventListener('click', libraryFooterModalOpen);\n} catch (error) {\n  console.log(error);\n} finally {\n  spinnerStop();\n}\n\nlibRefs.watchBtn.addEventListener('click', renderWatchedMovies);\nlibRefs.queueBtn.addEventListener('click', renderQueueMovies);\nlibRefs.library.addEventListener('click', onMovieCardClick);\n\nfunction displayBg(array) {\n  const emptyTitle = document.querySelector('.js-title-queue');\n  const emptyImg = document.querySelector('.js-library-bg-image');\n  const mainEl = document.querySelector('main');\n  if (array.length > 0) {\n    emptyTitle.classList.add('visually-hidden');\n    emptyImg.classList.add('visually-hidden');\n    mainEl.classList.remove('perspective');\n  }\n  if (array.length === 0) {\n    emptyTitle.classList.remove('visually-hidden');\n    emptyImg.classList.remove('visually-hidden');\n    mainEl.classList.add('perspective');\n  }\n}\n\nasync function renderWatchedMovies() {\n  libRefs.library.innerHTML = '';\n  const watchedMovies = get(themoviedbAPI.WATCH_KEY);\n  displayBg(watchedMovies);\n  const watchedMoviesIds = watchedMovies.map(movie => movie.id);\n  watchedMoviesIds.forEach(async id => {\n    const movie = await themoviedbAPI.fetchMovieById(id);\n    const genre = movie.genres.map(genre => genre.name);\n    if (genre.length > 2) {\n      genre.splice(2, genre.length - 1, 'Other');\n    }\n    if (genre.length === 0) {\n      genre.push('Other');\n    }\n    libRefs.library.insertAdjacentHTML(\n      'beforeend',\n      renderLibraryMarkup(movie, genre.join(', '))\n    );\n    libRefs.library.lastElementChild.setAttribute('data-status', 'watched');\n  });\n}\n\nasync function renderQueueMovies() {\n  libRefs.library.innerHTML = '';\n  const queueMovies = get(themoviedbAPI.QUEUE_KEY);\n  displayBg(queueMovies);\n  const queueMoviesIDes = queueMovies.map(movie => movie.id);\n  queueMoviesIDes.forEach(async id => {\n    const movie = await themoviedbAPI.fetchMovieById(id);\n    const genre = movie.genres.map(genre => genre.name);\n    if (genre.length > 2) {\n      genre.splice(2, genre.length - 1, 'Other');\n    }\n    if (genre.length === 0) {\n      genre.push('Other');\n    }\n    libRefs.library.insertAdjacentHTML(\n      'beforeend',\n      renderLibraryMarkup(movie, genre.join(', '))\n    );\n    libRefs.library.lastElementChild.setAttribute('data-status', 'queue');\n  });\n}\n\nasync function onMovieCardClick(event) {\n  const movieCard = event.target.closest('.gallery__item');\n  try {\n    spinnerPlay();\n    const movieId = movieCard.dataset.id;\n    const movieStatus = movieCard.dataset.status;\n    console.log(movieStatus);\n    await themoviedbAPI.fetchMovieById(movieId).then(data => {\n      const posterPath = data.poster_path\n        ? `https://image.tmdb.org/t/p/w300${data.poster_path}`\n        : `https://astoriamuseums.org/wp-content/uploads/2020/10/OFM-poster-not-available.png`;\n      const releaseYear = new Date(Date.parse(data.release_date)).getFullYear();\n      const filmData = {\n        id: data.id,\n        poster: posterPath,\n        title: data.title,\n        originalTitle: data.original_title,\n        genres: [],\n        popularity: data.popularity,\n        overview: data.overview,\n        vote_average: data.vote_average.toFixed(1),\n        vote_count: data.vote_count,\n        release_date: releaseYear,\n      };\n\n      data.genres.forEach(genre => {\n        filmData.genres.push(genre.name);\n      });\n      filmData.genres = filmData.genres.join(', ');\n\n      createModalMarkUp(filmData);\n    });\n\n    const removeFromWatchedBtn = document.querySelector(\n      '.lightbox-modal__watched-button'\n    );\n    removeFromWatchedBtn.textContent = 'Remove from Watched';\n\n    const removeFromQuequeBtn = document.querySelector(\n      '.lightbox-modal__queque-button'\n    );\n    removeFromQuequeBtn.textContent = 'Remove from Queque';\n\n    removeFromWatchedBtn.addEventListener('click', e => {\n      const movieId = e.target.closest('.lightbox-modal').dataset.id;\n      removeLocal(themoviedbAPI.WATCH_KEY, movieId);\n      if (movieStatus === 'watched') {\n        movieCard.remove();\n      }\n    });\n    removeFromQuequeBtn.addEventListener('click', e => {\n      const movieId = e.target.closest('.lightbox-modal').dataset.id;\n      removeLocal(themoviedbAPI.QUEUE_KEY, movieId);\n      if (movieStatus === 'queue') {\n        movieCard.remove();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  } finally {\n    spinnerStop();\n  }\n}\n","export const libRefs = {\n    library: document.querySelector('.gallery--library'),\n    footerLink: document.querySelector('.footer__link'),\n    footerBackDrop: document.querySelector('.footer__backdrop'),\n    footerCloseBtn: document.querySelector('[data-modal-close]'),\n    watchBtn: document.querySelector('.button-watched'),\n    queueBtn: document.querySelector('.button-queue'),\n}\n\n","export function renderLibraryMarkup(data, genres) {\n  const { id, poster_path, title, release_date, vote_average } = data;\n  const votes = vote_average.toFixed(1);\n  const posterPath = data.poster_path\n    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n    : `https://astoriamuseums.org/wp-content/uploads/2020/10/OFM-poster-not-available.png`;\n  const releaseYear = new Date(Date.parse(release_date)).getFullYear() || '';\n\n  return `<li class=\"gallery__item movie-card\" data-id=\"${id}\">\n                  <div class=\"movie-card__poster-thumb\">\n                    <img src=\"${posterPath}\"\n                        class=\"movie-card__poster\"\n                        alt=\"${title}\"\n                                            />\n                  </div>\n                  <div class=\"movie-card__wrap\">\n                      <h2 class=\"movie-info-title\"> ${title}</h2>\n                      <div class=\"movie-info-list\">\n                      <p class=\"info-item-genre\">${genres}</p>\n                        <span class=\"info-item-slash\"> | </span>\n                        <p class=\"info-item-year\">${releaseYear}</p>\n                        <span class=\"info-item-vote\">${votes}</span>\n                      </div>\n                  </div>\n            </li>`;\n}\n","import { libRefs } from './libRefs';\n\nexport function libraryFooterModalOpen() {\n    libRefs.footerBackDrop.classList.remove('is-hidden');\n    document.querySelector(\"body\").classList.add('noScroll');\n    document.addEventListener('keydown', hideFooterModal);\n    libRefs.footerBackDrop.addEventListener(\"click\", hideFooterModal);\n    libRefs.footerCloseBtn.addEventListener(\"click\", footerCloseBtnOnClick)\n}\n\nfunction footerCloseBtnOnClick() {\n    libRefs.footerBackDrop.classList.add('is-hidden');\n    removeListeners();\n}\n\nfunction hideFooterModal(e) {\n    if (e.key === 'Escape' || e.target === libRefs.footerBackDrop) {\n        libRefs.footerBackDrop.classList.add('is-hidden');\n        removeListeners();\n    }\n}\n\nfunction removeListeners() {\n    document.removeEventListener('keydown', hideFooterModal);\n    libRefs.footerBackDrop.removeEventListener(\"click\", hideFooterModal);\n    libRefs.footerCloseBtn.removeEventListener(\"click\", footerCloseBtnOnClick);\n    document.querySelector(\"body\").classList.remove('noScroll');\n}"],"names":["parcelRequire","$b6c7293de838b4f5$export$a53e322463ec8607","library","document","querySelector","footerLink","footerBackDrop","footerCloseBtn","watchBtn","queueBtn","$ba5fe8ed849660f2$export$271debc1213d424c","data","genres","id","poster_path","title","release_date","vote_average","votes","toFixed","Date","parse","getFullYear","$38a63d55dcbf3d14$var$footerCloseBtnOnClick","classList","add","$38a63d55dcbf3d14$var$removeListeners","$38a63d55dcbf3d14$var$hideFooterModal","e","key","target","removeEventListener","remove","$a4121ea71a4b503a$var$themoviedbAPI","$9ECFy","ThemoviedbAPI","$1GioC","spinnerPlay","$a4121ea71a4b503a$var$renderWatchedMovies","addEventListener","error","console","log","spinnerStop","$a4121ea71a4b503a$var$displayBg","array","emptyTitle","emptyImg","mainEl","length","async","innerHTML","watchedMovies","$9XPaE","get","WATCH_KEY","map","movie","forEach","fetchMovieById","genre1","genre","name","splice","push","insertAdjacentHTML","join","lastElementChild","setAttribute","queueMovies","QUEUE_KEY","genre2","event","movieCard","closest","movieId1","dataset","movieStatus","status","then","posterPath","releaseYear","filmData","poster","originalTitle","original_title","popularity","overview","vote_count","$jiL1b","createModalMarkUp","removeFromWatchedBtn","textContent","removeFromQuequeBtn","movieId","removeLocal","error1"],"version":3,"file":"library.41f130b6.js.map"}