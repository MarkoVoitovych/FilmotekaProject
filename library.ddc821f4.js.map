{"mappings":"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","sources":["src/javascript/library.js","src/javascript/libRefs.js","src/javascript/libraryFooterModalOpen.js"],"sourcesContent":["import BigPicture from 'bigpicture';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { libRefs } from './libRefs';\nimport { renderMarkup } from './renderMarkup';\nimport { ThemoviedbAPI } from './themoviedbAPI';\nimport { createModalMarkUp } from './renderModalMarkUp';\nimport { spinnerPlay, spinnerStop } from './spiner';\nimport { get, removeLocal } from './localStorageUse';\nimport { libraryFooterModalOpen } from './libraryFooterModalOpen';\n\nconst themoviedbAPI = new ThemoviedbAPI();\n\ntry {\n    spinnerPlay();\n    renderWatchedMovies();\n    libRefs.footerLink.addEventListener(\"click\", libraryFooterModalOpen);\n} catch (error) {\n    console.log(error);\n} finally {\n    spinnerStop();\n}\n\nlibRefs.watchBtn.addEventListener('click', renderWatchedMovies);\nlibRefs.queueBtn.addEventListener('click', renderQueueMovies);\nlibRefs.library.addEventListener('click', onMovieCardClick);\n\nasync function renderWatchedMovies() {\n    libRefs.library.innerHTML = '';\n    const watchedMovies = get(themoviedbAPI.WATCH_KEY);\n    const watchedMoviesIds = watchedMovies.map(movie => movie.id);\n    watchedMoviesIds.forEach(async id => {\n        const movie = await themoviedbAPI.fetchMovieById(id);\n        const genre = movie.genres.map(genre => genre.name);\n        if (genre.length > 2) {\n            genre.splice(2, genre.length - 1, 'Other');\n        }\n        if (genre.length === 0) {\n            genre.push('Other');\n        }\n        libRefs.library.insertAdjacentHTML('beforeend', renderMarkup(movie, genre.join(', ')));\n        libRefs.library.lastElementChild.setAttribute('data-status', 'watched');\n    });\n}\n\nasync function renderQueueMovies() {\n    libRefs.library.innerHTML = '';\n    const queueMovies = get(themoviedbAPI.QUEUE_KEY);\n    const queueMoviesIDes = queueMovies.map(movie => movie.id);\n    queueMoviesIDes.forEach(async id => {\n        const movie = await themoviedbAPI.fetchMovieById(id);\n        const genre = movie.genres.map(genre => genre.name);\n        if (genre.length > 2) {\n            genre.splice(2, genre.length - 1, 'Other');\n        }\n        if (genre.length === 0) {\n            genre.push('Other');\n        }\n        libRefs.library.insertAdjacentHTML('beforeend', renderMarkup(movie, genre.join(', ')));\n        libRefs.library.lastElementChild.setAttribute('data-status', 'queue');\n    });\n}\n\nasync function onMovieCardClick(event) {\n    const movieCard = event.target.closest('.gallery__item');\n    try {\n        spinnerPlay();\n        const movieId = movieCard.dataset.id;\n        const movieStatus = movieCard.dataset.status;\n        console.log(movieStatus);\n        await themoviedbAPI.fetchMovieById(movieId).then(data => {\n            const posterPath = data.poster_path\n                ? `https://image.tmdb.org/t/p/w300${data.poster_path}`\n                : `https://astoriamuseums.org/wp-content/uploads/2020/10/OFM-poster-not-available.png`;\n            const releaseYear = new Date(Date.parse(data.release_date)).getFullYear();\n            const filmData = {\n                id: data.id,\n                poster: posterPath,\n                title: data.title,\n                originalTitle: data.original_title,\n                genres: [],\n                popularity: data.popularity,\n                overview: data.overview,\n                vote_average: data.vote_average,\n                vote_count: data.vote_count,\n                release_date: releaseYear,\n            };\n\n            data.genres.forEach(genre => {\n                filmData.genres.push(genre.name);\n            });\n            filmData.genres = filmData.genres.join(', ');\n\n            createModalMarkUp(filmData);\n\n        });\n\n        const removeFromWatchedBtn = document.querySelector(\n            '.lightbox-modal__watched-button'\n        );\n        removeFromWatchedBtn.textContent = \"Remove from Watched\";\n\n        const removeFromQuequeBtn = document.querySelector(\n            '.lightbox-modal__queque-button'\n        );\n        removeFromQuequeBtn.textContent = \"Remove from Queque\";\n\n        removeFromWatchedBtn.addEventListener('click', (e) => {\n            const movieId = e.target.closest('.lightbox-modal').dataset.id;\n            removeLocal(themoviedbAPI.WATCH_KEY, movieId);\n            if (movieStatus === 'watched') {\n                movieCard.remove();\n            }\n        });\n        removeFromQuequeBtn.addEventListener('click', (e) => {\n            const movieId = e.target.closest('.lightbox-modal').dataset.id;\n            removeLocal(themoviedbAPI.QUEUE_KEY, movieId);\n            if (movieStatus === 'queue') {\n                movieCard.remove();\n            }\n\n        }\n        );\n    } catch (error) {\n        console.log(error);\n    } finally {\n        spinnerStop();\n    }\n}","export const libRefs = {\n    library: document.querySelector('.gallery--library'),\n    footerLink: document.querySelector('.footer__link'),\n    footerBackDrop: document.querySelector('.footer__backdrop'),\n    footerCloseBtn: document.querySelector('[data-modal-close]'),\n    watchBtn: document.querySelector('.button-watched'),\n    queueBtn: document.querySelector('.button-queue'),\n}\n\n","import { libRefs } from './libRefs';\n\nexport function libraryFooterModalOpen() {\n    libRefs.footerBackDrop.classList.remove('is-hidden');\n    document.querySelector(\"body\").classList.add('noScroll');\n    document.addEventListener('keydown', hideFooterModal);\n    libRefs.footerBackDrop.addEventListener(\"click\", hideFooterModal);\n    libRefs.footerCloseBtn.addEventListener(\"click\", footerCloseBtnOnClick)\n}\n\nfunction footerCloseBtnOnClick() {\n    libRefs.footerBackDrop.classList.add('is-hidden');\n    removeListeners();\n}\n\nfunction hideFooterModal(e) {\n    if (e.key === 'Escape' || e.target === libRefs.footerBackDrop) {\n        libRefs.footerBackDrop.classList.add('is-hidden');\n        removeListeners();\n    }\n}\n\nfunction removeListeners() {\n    document.removeEventListener('keydown', hideFooterModal);\n    libRefs.footerBackDrop.removeEventListener(\"click\", hideFooterModal);\n    libRefs.footerCloseBtn.removeEventListener(\"click\", footerCloseBtnOnClick);\n    document.querySelector(\"body\").classList.remove('noScroll');\n}"],"names":["parcelRequire","$b6c7293de838b4f5$export$a53e322463ec8607","library","document","querySelector","footerLink","footerBackDrop","footerCloseBtn","watchBtn","queueBtn","$38a63d55dcbf3d14$var$footerCloseBtnOnClick","classList","add","$38a63d55dcbf3d14$var$removeListeners","$38a63d55dcbf3d14$var$hideFooterModal","e","key","target","removeEventListener","remove","$a4121ea71a4b503a$var$themoviedbAPI","$9ECFy","ThemoviedbAPI","$1GioC","spinnerPlay","$a4121ea71a4b503a$var$renderWatchedMovies","addEventListener","error","console","log","spinnerStop","async","innerHTML","$9XPaE","get","WATCH_KEY","map","movie","id","forEach","fetchMovieById","genre1","genres","genre","name","length","splice","push","insertAdjacentHTML","$4PM3P","renderMarkup","join","lastElementChild","setAttribute","queueMovies","QUEUE_KEY","genre2","event","movieCard","closest","movieId1","dataset","movieStatus","status","then","data","posterPath","poster_path","releaseYear","Date","parse","release_date","getFullYear","filmData","poster","title","originalTitle","original_title","popularity","overview","vote_average","vote_count","$jiL1b","createModalMarkUp","removeFromWatchedBtn","textContent","removeFromQuequeBtn","movieId","removeLocal","error1"],"version":3,"file":"library.ddc821f4.js.map"}